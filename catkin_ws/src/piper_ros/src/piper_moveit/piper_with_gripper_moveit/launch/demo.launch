<launch>

  <!-- specify the planning pipeline -->
  <arg name="pipeline" default="ompl" />

  <!-- By default, we do not start a database (it can be large) -->
  <arg name="db" default="false" />
  <!-- Allow user to specify database location -->
  <arg name="db_path" default="$(find piper_with_gripper_moveit)/default_warehouse_mongo_db" />

  <!-- By default, we are not in debug mode -->
  <arg name="debug" default="false" />

  <!-- By default, we will load or override the robot_description -->
  <arg name="load_robot_description" default="true"/>

  <!-- Choose controller manager: fake, simple, or ros_control -->
  <arg name="moveit_controller_manager" default="fake" />
  <!-- Add argument for real hardware mode -->
  <arg name="real_hardware" default="false" />
  <!-- Set execution mode for fake execution controllers -->
  <arg name="fake_execution_type" default="interpolate" />

  <!-- By default, hide joint_state_publisher's GUI in 'fake' controller_manager mode -->
  <arg name="use_gui" default="false" />
  <arg name="use_rviz" default="true" />

  <!-- If needed, broadcast static tf for robot root -->

  <!-- Real robot hardware control -->
  <group if="$(arg real_hardware)">
    <!-- 启动真实机械臂控制节点 -->
    <arg name="can_port" default="can0" />
    <arg name="auto_enable" default="true" />
    <arg name="gripper_val_mutiple" default="2" />
    
    <node name="piper_ctrl_single_node" pkg="piper" type="piper_ctrl_single_node.py" output="screen">
      <param name="can_port" value="$(arg can_port)" />
      <param name="auto_enable" value="$(arg auto_enable)" />
      <param name="gripper_val_mutiple" value="$(arg gripper_val_mutiple)" />
      <param name="girpper_exist" value="true" />
      <remap from="joint_ctrl_single" to="/joint_ctrl_commands" />
    </node>
    
    <!-- 启动Fake到Real的桥接节点 -->
    <node name="fake_to_real_bridge" pkg="moveit_ctrl" type="fake_to_real_bridge.py" output="screen" />
  </group>

  <group if="$(eval arg('moveit_controller_manager') == 'fake')">
    <!-- For fake mode without real hardware -->
    <group unless="$(arg real_hardware)">
      <!-- We do not have a real robot connected, so publish fake joint states via a joint_state_publisher
           MoveIt's fake controller's joint states are considered via the 'source_list' parameter -->
      <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" unless="$(arg use_gui)">
        <rosparam param="source_list">[move_group/fake_controller_joint_states]</rosparam>
        <param name="rate" value="100"/>
      </node>
      <!-- If desired, a GUI version is available allowing to move the simulated robot around manually
           This corresponds to moving around the real robot without the use of MoveIt. -->
      <node name="joint_state_publisher" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" if="$(arg use_gui)">
        <rosparam param="source_list">[move_group/fake_controller_joint_states]</rosparam>
        <param name="rate" value="100"/>
      </node>
    </group>

    <!-- Always publish robot state -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />
  </group>

  <!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) -->
  <include file="$(dirname)/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>
    <arg name="moveit_controller_manager" value="$(arg moveit_controller_manager)" />
    <arg name="fake_execution_type" value="$(arg fake_execution_type)"/>
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="pipeline" value="$(arg pipeline)"/>
    <arg name="load_robot_description" value="$(arg load_robot_description)"/>
  </include>

  <!-- Run Rviz and load the default config to see the state of the move_group node -->
  <include file="$(dirname)/moveit_rviz.launch" if="$(arg use_rviz)">
    <arg name="rviz_config" value="$(dirname)/moveit.rviz"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- If database loading was enabled, start mongodb as well -->
  <include file="$(dirname)/default_warehouse_db.launch" if="$(arg db)">
    <arg name="moveit_warehouse_database_path" value="$(arg db_path)"/>
  </include>

  <!-- 启动 joint_moveit_ctrl_server -->
  <node name="joint_moveit_ctrl_server" pkg="moveit_ctrl" type="joint_moveit_ctrl_server.py"
        output="screen" launch-prefix="python3" if="$(arg real_hardware)"/>

</launch>
